---
templates:
  defaults: &defaults
    docker:
      - image: circleci/node:10-browsers
        environment:
          JOBS: 2

  node_key: &node_key
    key: node-deps-{{ checksum "yarn.lock" }}-{{ checksum "circle.yml" }}

  restore_node: &restore_node
    restore_cache:
      <<: *node_key

  deploy_static: &deploy_static
    <<: *defaults
    steps:
      - checkout
      - <<: *restore_node
      - deploy:
          name: Deploy to S3
          command: |
            env | sed -n "s/^${ENV}_//p" >> .env
            npx ember deploy "$(echo $ENV | awk '{print tolower($0)}')" --verbose

  filter_wagtail: &filter_wagtail
    filters:
      branches:
        only: wagtail

  filter_demo: &filter_demo
    filters:
      branches:
        only: master
      tags:
        only: demo

  filter_prod: &filter_prod
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+/

  filter_qa: &filter_qa
    filters:
      branches:
        only: /[A-Za-z-_]+/[A-Za-z-_\d]+/
        ignore: /dependabot.*/

  deploy_fastboot: &deploy_fastboot
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: deploy-{{ checksum "circle.yml" }}
      - run:
          name: Install Requirements
          command: |
            if [[ ! -d ~/.venv ]]; then
              python3 -m venv ~/.venv
              source ~/.venv/bin/activate
              pip3 install -U git+https://github.com/nypublicradio/nyprsetuptools.git
            fi
      - deploy:
          name: Deploy Fastboot
          command: |
            TAG=${TAG:-$CIRCLE_TAG}
            CLUSTER=$ENV && [[ $ENV == "wagtail" ]] && CLUSTER="demo"
            source ~/.venv/bin/activate
            nyprsetuptools DockerDeploy \
              --cpu=1024 \
              --ecr-repository=gothamist-client \
              --cluster-override=fastboot-$CLUSTER \
              --environment=$ENV \
              --execution-role=gothamist-client-$ENV \
              --fargate \
              --memory-reservation=2048 \
              --ports=80 \
              --tag=$TAG \
              --task-role=gothamist-client-$ENV \
              --test='./scripts/test_nginx.sh' \
              --wait=300 \
              --no-strict-environment
      - save_cache:
          key: deploy-{{ checksum "circle.yml" }}
          paths:
            - ~/.venv

version: 2
jobs:
  build-static:
    <<: *defaults
    steps:
      - checkout

      - <<: *restore_node
      - run:
          name: Install node dependencies
          command: |
            if [ ! -d node_modules ]; then
              yarn --pure-lockfile
            fi
      - save_cache:
          <<: *node_key
          paths:
            - node_modules

  test-static:
    <<: *defaults
    steps:
      - checkout
      - <<: *restore_node
      - run:
          name: Test
          environment:
            CIRCLE_TEST_RESULTS: test-results
          command: npx ember test
      - store_test_results:
          path: test-results/

  deploy-static-qa:
    <<: *defaults
    steps:
      - checkout
      - <<: *restore_node
      - deploy:
          name: Deploying QA Build
          command: |
            env | sed -n "s/^WAGTAIL_//p" > .env
            npx ember deploy qa:$CIRCLE_BRANCH --verbose --activate
      - run:
          name: Make QA artifact
          command: |
            mkdir /tmp/qa-builds
            echo "<a href=\"https://$WAGTAIL_QA_HOST?build=$CIRCLE_BRANCH\">https://$WAGTAIL_QA_HOST?build=$CIRCLE_BRANCH</a>" > /tmp/qa-builds/$CIRCLE_SHA1.html

      - store_artifacts:
          path: /tmp/qa-builds

  deploy-static-wagtail:
    environment:
      ENV: WAGTAIL
    <<: *deploy_static

  deploy-fastboot-wagtail:
    environment:
      ENV: wagtail
      TAG: wagtail
    <<: *deploy_fastboot

  deploy-static-demo:
    environment:
      ENV: DEMO
    <<: *deploy_static

  deploy-fastboot-demo:
    environment:
      ENV: demo
      TAG: demo
    <<: *deploy_fastboot

  deploy-static-prod:
    environment:
      ENV: PROD
    <<: *deploy_static

  deploy-fastboot-prod:
    environment:
      ENV: prod
    <<: *deploy_fastboot

workflows:
  version: 2
  just-test:
    jobs:
      - build-static:
          filters:
            branches:
              ignore: /master|wagtail|[A-Za-z-_]+/[A-Za-z-_\d]+/
      - test-static:
          requires:
            - build-static

  deploy-qa:
    jobs:
      - build-static:
          <<: *filter_qa
      - test-static:
          requires:
            - build-static
      - deploy-static-qa:
          requires:
            - test-static

  deploy-wagtail:
    jobs:
      - build-static:
          <<: *filter_wagtail
      - test-static:
          <<: *filter_wagtail
          requires:
            - build-static
      - deploy-static-wagtail:
          <<: *filter_wagtail
          requires:
            - test-static
      - deploy-fastboot-wagtail:
          <<: *filter_wagtail
          requires:
            - test-static

  deploy-demo:
    jobs:
      - build-static:
          <<: *filter_demo
      - test-static:
          <<: *filter_demo
          requires:
            - build-static
      - deploy-static-demo:
          <<: *filter_demo
          requires:
            - test-static
      - deploy-fastboot-demo:
          <<: *filter_demo
          requires:
            - test-static

  deploy-prod:
    jobs:
      - build-static:
          <<: *filter_prod
      - test-static:
          <<: *filter_prod
          requires:
            - build-static
      - deploy-static-prod:
          <<: *filter_prod
          requires:
            - test-static
      - deploy-fastboot-prod:
          <<: *filter_prod
          requires:
            - test-static
